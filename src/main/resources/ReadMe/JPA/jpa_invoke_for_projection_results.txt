http://stackoverflow.com/questions/13012584/jpa-how-to-convert-a-native-query-result-set-to-pojo-class-collection
https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#projections



1. invoke from JPQL
   -> select using 'SELECt new **.***.****.*****DTO( ... Contructor arguments) FROM ***EntityObj'
   ---------------------------------------------
    //  -> return object should be specified with 'AllArgsConstructor -> new XXX(...)'
    @Query("SELECT                                                                                                                                   " +
            "    new com.github.devcat24.mvc.svc.db.dto.mm.MemberDTO (m.id as id, m.name as name, m.city as city, m.street as street, m.zipcode as zipcode) " +
            " FROM com.github.devcat24.mvc.svc.db.entity.mm.Member m WHERE m.id > :queryID                                                                     ")
    List<MemberDTO> findAllMembersFromIdParamAsProjectionResult(@Param("queryID") Long startingID);


2. invoke from nativeQuery
    a. 'orm_xxx.xml' schema should be defined to use 'JPA2.1'
   ---------------------------------------------
	<entity-mappings
			xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.datanucleus.org/xsd/jpa/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
			version="2.1">
   ---------------------------------------------
   b. provide 'result-set-mapping' for projection(DTO) class
   ---------------------------------------------
	<?xml version="1.0" encoding="UTF-8"?>
	<entity-mappings
			xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.datanucleus.org/xsd/jpa/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
			version="2.1">
		<named-native-query name="Member.findAllMembersWithNativeSQLFile" result-set-mapping="MemberDTOMapping">
			<!-- name="Member.findAllMembersWithNativeSQLFile" -> name should be 'Entity' Object (not Repository) ! -->
			<query>
				select cast(m.member_id as unsigned) as member_id, m.name as name, m.city as city, m.street as street, m.zipcode as zipcode from jpa_lab_member m where m.name like LOWER(CONCAT('%', :nameString, '%'))
			</query>
		</named-native-query>

		<sql-result-set-mapping name="MemberDTOMapping">
			<constructor-result target-class="com.github.devcat24.mvc.svc.db.dto.mm.MemberDTO">
				<column name="member_id" class="java.lang.Long"/>
				<column name="name" />
				<column name="city" />
				<column name="street" />
				<column name="zipcode" />
			</constructor-result>
		</sql-result-set-mapping>
	</entity-mappings>
   ---------------------------------------------


